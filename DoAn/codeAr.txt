//Khai báo các thư viện cần thiết
#include <ESP8266WiFi.h>
#include <DHT.h>
#include <MySQL_Connection.h>
#include <MySQL_Cursor.h>

//Khai báo các thông số wifi và cơ sở dữ liệu
#define WIFI_SSID "Tên wifi của bạn"
#define WIFI_PASS "Mật khẩu wifi của bạn"
#define DB_HOST "Địa chỉ IP của máy chủ cơ sở dữ liệu"
#define DB_NAME "Tên cơ sở dữ liệu của bạn"
#define DB_USER "Tên người dùng cơ sở dữ liệu của bạn"
#define DB_PASS "Mật khẩu cơ sở dữ liệu của bạn"

//Khai báo các chân kết nối cảm biến và mạch wifi
#define DHT_PIN 2 //Chân kết nối cảm biến DHT11 với arduino
#define DHT_TYPE DHT11 //Loại cảm biến
#define ESP_RX 10 //Chân kết nối RX của mạch wifi với arduino
#define ESP_TX 11 //Chân kết nối TX của mạch wifi với arduino

//Tạo các đối tượng cảm biến, wifi và cơ sở dữ liệu
DHT dht(DHT_PIN, DHT_TYPE);
WiFiClient client;
MySQL_Connection conn((Client *)&client);
MySQL_Cursor *cursor;

//Khai báo các biến lưu trữ nhiệt độ và độ ẩm
float temp; //Nhiệt độ
float hum; //Độ ẩm
float temp_old; //Nhiệt độ cũ
float hum_old; //Độ ẩm cũ
float temp_diff; //Độ chênh lệch nhiệt độ
float hum_diff; //Độ chênh lệch độ ẩm
float temp_threshold = 1.0; //Ngưỡng chênh lệch nhiệt độ để gửi thông báo
float hum_threshold = 5.0; //Ngưỡng chênh lệch độ ẩm để gửi thông báo

//Hàm khởi tạo
void setup() {
  //Thiết lập tốc độ truyền dữ liệu
  Serial.begin(9600);
  Serial1.begin(9600);
  
  //Kết nối wifi
  Serial.println("Kết nối wifi...");
  WiFi.begin(WIFI_SSID, WIFI_PASS);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Đã kết nối wifi");
  Serial.println("Địa chỉ IP: ");
  Serial.println(WiFi.localIP());
  
  //Kết nối cơ sở dữ liệu
  Serial.println("Kết nối cơ sở dữ liệu...");
  if (conn.connect(DB_HOST, 3306, DB_USER, DB_PASS)) {
    Serial.println("Đã kết nối cơ sở dữ liệu");
    cursor = new MySQL_Cursor(&conn);
  }
  else {
    Serial.println("Không thể kết nối cơ sở dữ liệu");
  }
  
  //Khởi động cảm biến
  dht.begin();
  
  //Đọc nhiệt độ và độ ẩm lần đầu
  temp_old = dht.readTemperature();
  hum_old = dht.readHumidity();
}

//Hàm vòng lặp
void loop() {
  //Đọc nhiệt độ và độ ẩm hiện tại
  temp = dht.readTemperature();
  hum = dht.readHumidity();
  
  //Tính độ chênh lệch nhiệt độ và độ ẩm
  temp_diff = abs(temp - temp_old);
  hum_diff = abs(hum - hum_old);
  
  //Kiểm tra xem có cần gửi thông báo hay không
  if (temp_diff >= temp_threshold || hum_diff >= hum_threshold) {
    //Gửi thông báo
    Serial.println("Có sự thay đổi nhiệt độ hoặc độ ẩm");
    Serial.print("Nhiệt độ hiện tại: ");
    Serial.println(temp);
    Serial.print("Độ ẩm hiện tại: ");
    Serial.println(hum);
    
    //Lưu dữ liệu vào cơ sở dữ liệu
    char query[128];
    sprintf(query, "INSERT INTO sensor_data (temperature, humidity) VALUES (%f, %f)", temp, hum);
    cursor->execute(query);
    
    //Cập nhật nhiệt độ và độ ẩm cũ
    temp_old = temp;
    hum_old = hum;
  }
  
  //Đợi 10 giây
  delay(10000);
}